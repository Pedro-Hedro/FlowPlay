name: Terraform GitFlow Deploy

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'

  pull_request:
    branches:
      - main
      - develop

jobs:
  terraform-lint:
    name: Lint and Security Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache para dependÃªncias do Python (Checkov, tfsec, etc.)
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Instalar Checkov e tfsec com cache
    - name: Install Checkov
      run: |
        pip install checkov
      continue-on-error: true

    - name: Install tfsec manually
      run: |
        wget https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64 -O /usr/local/bin/tfsec
        chmod +x /usr/local/bin/tfsec


    # Run tfsec for security analysis
    - name: Run tfsec
      run: tfsec ./terraform
      continue-on-error: true

    # Install Checkov for additional security scanning
    - name: Install Checkov
      run: |
        pip install checkov
      continue-on-error: true

    # Run Checkov for code checks and security
    - name: Run Checkov
      run: checkov -d ./terraform
      continue-on-error: true

  terraform-plan:
    name: Terraform Plan (Dev or Prod)
    runs-on: ubuntu-latest

    needs: terraform-lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache Terraform modules and providers
    - name: Cache Terraform modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.terraform.d/plugin-cache
          .terraform
        key: terraform-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          terraform-

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.4.6

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    # Terraform Plan with Debug Logs and Capture Output
    - name: Terraform Plan
      id: plan
      run:  terraform plan 
      working-directory: ./terraform

    # Use the captured output from plan in PR comments or logs
    - name: Display Plan Output
      run: echo "${{ steps.plan.outputs.stdout }}"

  terraform-apply:
    name: Terraform Apply (Deploy to Dev/Prod)
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.4.6

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve 
      working-directory: ./terraform